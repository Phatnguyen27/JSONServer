{"ast":null,"code":"var _jsxFileName = \"/home/phat/Desktop/Project/phat/src/contexts/PlaylistContext.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { server } from '../server';\nexport const PlaylistContext = React.createContext();\nexport class PlaylistProvider extends Component {\n  constructor() {\n    super();\n    this.state = {\n      playlist: []\n    };\n    this.getPlaylist = this.getPlaylist.bind(this);\n    this.addToPlaylist = this.addToPlaylist.bind(this);\n    this.clickToVote = this.clickToVote.bind(this);\n  }\n\n  componentWillMount() {\n    this.getPlaylist();\n  }\n\n  clickToVote(Id, isUpvote) {\n    const token = localStorage.getItem('Token');\n    if (token === null) alert('Please log in to vote ');else {\n      axios({\n        method: 'POST',\n        headers: {\n          Authorization: \"Bearer \".concat(JSON.parse(localStorage.getItem('Token')).token)\n        },\n        url: 'https://lovely-hot-springs-99494.herokuapp.com/api/songs/vote',\n        data: {\n          video_id: Id,\n          isUpvote: isUpvote\n        }\n      }).then(response => {\n        if (response.status === 202) alert('You have used all your votes today, please comeback tomorrow');else if (response.status === 201) {\n          alert('Successfully Voted !!!');\n          this.getPlaylist();\n        }\n      }).catch(error => {\n        alert('Voted Fail !!! Please try again later');\n        console.log(error);\n      });\n    }\n    console.log('Clicked');\n  }\n\n  addToPlaylist(videoId) {\n    axios({\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + JSON.parse(localStorage.getItem('Token')).token\n      },\n      url: server + '/songs/add',\n      data: {\n        id: videoId\n      }\n    }).then(response => {\n      console.log(response);\n      if (response.status === 200) alert('This account has already added a song, try again tomorrow!!');else {\n        alert('Successfully added');\n        this.getPlaylist();\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  getPlaylist() {\n    axios.get(server + \"/songs/playlist\").then(response => {\n      this.setState({\n        playlist: response.data\n      });\n      console.log(this.state.playlist);\n    }).catch(error => console.log(error));\n  }\n\n  render() {\n    return React.createElement(PlaylistContext.Provider, {\n      value: {\n        playlist: this.state.playlist,\n        addToPlaylist: this.addToPlaylist,\n        clickToVote: this.clickToVote\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}","map":{"version":3,"sources":["/home/phat/Desktop/Project/phat/src/contexts/PlaylistContext.js"],"names":["React","Component","axios","server","PlaylistContext","createContext","PlaylistProvider","constructor","state","playlist","getPlaylist","bind","addToPlaylist","clickToVote","componentWillMount","Id","isUpvote","token","localStorage","getItem","alert","method","headers","Authorization","JSON","parse","url","data","video_id","then","response","status","catch","error","console","log","videoId","id","get","setState","render","props","children"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { server } from '../server';\n\nexport const PlaylistContext = React.createContext();\n\nexport class PlaylistProvider extends Component {\n    constructor() {\n        super();\n        this.state = {\n            playlist: []\n        }\n        this.getPlaylist = this.getPlaylist.bind(this);\n        this.addToPlaylist = this.addToPlaylist.bind(this);\n        this.clickToVote = this.clickToVote.bind(this);\n    }\n    componentWillMount() {\n        this.getPlaylist();\n    }\n    clickToVote(Id, isUpvote) {\n        const token = localStorage.getItem('Token');\n        if (token === null) alert('Please log in to vote ');\n        else {\n            axios({\n                method: 'POST',\n                headers: { Authorization: `Bearer ${JSON.parse(localStorage.getItem('Token')).token}` },\n                url: 'https://lovely-hot-springs-99494.herokuapp.com/api/songs/vote',\n                data:\n                {\n                    video_id: Id,\n                    isUpvote: isUpvote\n                }\n            })\n                .then(response => {\n                    if(response.status === 202)\n                        alert('You have used all your votes today, please comeback tomorrow');\n                    else if(response.status === 201){\n                        alert('Successfully Voted !!!');\n                        this.getPlaylist();\n                    }    \n                })\n                .catch(error => {\n                    alert('Voted Fail !!! Please try again later');\n                    console.log(error);\n                })\n        }\n        console.log('Clicked')\n    }\n    addToPlaylist(videoId) {\n        axios({\n            method: 'POST',\n            headers: { Authorization: 'Bearer ' + JSON.parse(localStorage.getItem('Token')).token },\n            url: server + '/songs/add',\n            data: {\n                id: videoId\n            }\n        })\n            .then(response => {\n                console.log(response)\n                if (response.status === 200)\n                    alert('This account has already added a song, try again tomorrow!!');\n                else {\n                    alert('Successfully added');\n                    this.getPlaylist();\n                }\n            })\n            .catch(error => { console.log(error) })\n    }\n    getPlaylist() {\n        axios.get(server + `/songs/playlist`)\n            .then(response => {\n                this.setState({\n                    playlist: response.data\n                })\n                console.log(this.state.playlist);\n            })\n            .catch(error => console.log(error))\n    }\n    render() {\n        return (\n            <PlaylistContext.Provider\n                value={{\n                    playlist: this.state.playlist,\n                    addToPlaylist: this.addToPlaylist,\n                    clickToVote: this.clickToVote\n                }}\n            >\n                {this.props.children}\n            </PlaylistContext.Provider>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}