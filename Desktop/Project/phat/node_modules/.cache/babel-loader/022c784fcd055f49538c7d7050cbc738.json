{"ast":null,"code":"var _jsxFileName = \"/home/phat/Desktop/Project/phat/src/components/body/ListAddSong/ListSongSearch.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport InfoSongSearch from './InfoSongSearch'; // import VideoSong from '../ListSong/VideoSong';\n\nexport default class ListSongSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: this.props.match.params.text,\n      SongList: [],\n      videoFound: true\n    };\n    this.getSongList = this.getSongList.bind(this);\n  }\n\n  componentDidMount() {\n    var value = this.props.match.params.text;\n    this.getSongList(value);\n  }\n\n  componentDidUpdate() {\n    if (this.state.text !== this.props.match.params.text) {\n      this.setState({\n        text: this.props.match.params.text,\n        SongList: [],\n        videoFound: true\n      });\n      this.getSongList(this.props.match.params.text);\n    }\n  }\n\n  getSongList(value) {\n    // axios.get(`http://localhost:3000/SearchedSong?song_title=${value}`)\n    axios.get(\"https://gorgeous-grand-teton-66654.herokuapp.com/api/songs/search/\".concat(value)).then(response => {\n      if (response.data === 'No Video Found') this.setState({\n        videoFound: false\n      });else {\n        this.setState({\n          text: value,\n          SongList: response.data.data,\n          videoFound: true\n        });\n      }\n      console.log(response.data);\n    }).catch(error => console.log(error)); // axios.post('',value)\n    //      .then(response => {\n    //          this.setState({\n    //              text : value,\n    //              SongList : response.data\n    //          });\n    //      })\n    //      .catch(error => console.log(error))\n  }\n\n  render() {\n    const _this$state = this.state,\n          text = _this$state.text,\n          videoFound = _this$state.videoFound;\n    const SongList = this.state.SongList;\n    console.log(\"SongList: \" + SongList);\n    var elementSong = SongList.map((value, key) => {\n      return React.createElement(InfoSongSearch, {\n        id: value.videoId,\n        song_title: value.title,\n        singer: value.channelTitle,\n        views: 'value.views',\n        imgsrc: value.thumbnails,\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"SearchAreaHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Show results for \", React.createElement(\"span\", {\n      className: \"SearchInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, text))), React.createElement(\"div\", {\n      className: \"ResultSet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, videoFound === false && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"NO VIDEO FOUND\"), videoFound === true && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, elementSong)));\n  }\n\n}","map":{"version":3,"sources":["/home/phat/Desktop/Project/phat/src/components/body/ListAddSong/ListSongSearch.js"],"names":["React","Component","axios","InfoSongSearch","ListSongSearch","constructor","props","state","text","match","params","SongList","videoFound","getSongList","bind","componentDidMount","value","componentDidUpdate","setState","get","then","response","data","console","log","catch","error","render","elementSong","map","key","videoId","title","channelTitle","thumbnails"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport InfoSongSearch from './InfoSongSearch'\n// import VideoSong from '../ListSong/VideoSong';\n\nexport default class ListSongSearch extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            text: this.props.match.params.text,\n            SongList : [],\n            videoFound : true\n        }\n        this.getSongList = this.getSongList.bind(this);\n    }\n    componentDidMount()\n    {\n        var value = this.props.match.params.text;\n        this.getSongList(value);\n    }\n    componentDidUpdate()\n    {\n        \n        if(this.state.text !== this.props.match.params.text)\n        {\n            this.setState({\n                text : this.props.match.params.text,\n                SongList : [],\n                videoFound: true\n            })\n            this.getSongList(this.props.match.params.text);\n        }\n    }\n    getSongList(value)\n    {\n        // axios.get(`http://localhost:3000/SearchedSong?song_title=${value}`)\n        axios.get(`https://gorgeous-grand-teton-66654.herokuapp.com/api/songs/search/${value}`)\n             .then(response => {\n                 if(response.data === 'No Video Found')\n                    this.setState({ videoFound: false});\n                 else{\n                    this.setState({\n                        text : value,\n                        SongList: response.data.data,\n                        videoFound: true\n                    })\n                 }\n                 \n                 console.log(response.data);\n             })\n             .catch(error => console.log(error))\n\n        // axios.post('',value)\n        //      .then(response => {\n        //          this.setState({\n        //              text : value,\n        //              SongList : response.data\n        //          });\n        //      })\n        //      .catch(error => console.log(error))\n    }\n    render()\n    {\n        const {text,videoFound} = this.state;\n        const SongList = this.state.SongList;\n        console.log(\"SongList: \" +  SongList);\n        var elementSong = SongList.map((value, key) => { \n            return <InfoSongSearch id = {value.videoId} song_title = {value.title} singer = {value.channelTitle} views = {'value.views'} imgsrc={value.thumbnails} key = {key}/> \n        })\n        \n        return(\n            <div>\n                <div className = \"SearchAreaHeader\">\n                    <span>Show results for <span className = \"SearchInput\">{text}</span></span>\n                </div>\n                <div className = \"ResultSet\">\n                    {videoFound === false && <div>NO VIDEO FOUND</div>}\n                    {videoFound === true && \n                        <div>\n                            {elementSong}\n                        </div>\n                    }\n                </div>\n            </div> \n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}