{"ast":null,"code":"var _jsxFileName = \"/home/phat/Desktop/Project/phat/src/components/body/ListAddSong/SidebarPlaylist.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport InfoSidebarSongAdded from './InfoSidebarSongAdded';\nexport default class SidebarPlaylist extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentWillMount = () => {\n      axios.get('https://gorgeous-grand-teton-66654.herokuapp.com/api/songs/get/list').then(response => {\n        this.setState({\n          sidebarPlaylist: response.data\n        });\n        localStorage.setItem('sidebarPlaylist', JSON.stringify(response.data)); //  console.log(this.state.sidebarPlaylist);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      sidebarPlaylist: []\n    };\n  }\n\n  render() {\n    const sidebarPlaylist = this.state.sidebarPlaylist;\n    return React.createElement(\"div\", {\n      className: \"sidebar-playlist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, sidebarPlaylist.map((value, index) => {\n      return React.createElement(InfoSidebarSongAdded, {\n        id: value.videoID,\n        song_title: value.title,\n        singer: value.channelTitle,\n        thumbnail: value.thumbnails,\n        upvote: value.upvote,\n        downvote: value.downvote,\n        key: index,\n        voteValue: value.voteValue,\n        votingID: value._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      });\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/phat/Desktop/Project/phat/src/components/body/ListAddSong/SidebarPlaylist.js"],"names":["React","Component","axios","InfoSidebarSongAdded","SidebarPlaylist","constructor","props","componentWillMount","get","then","response","setState","sidebarPlaylist","data","localStorage","setItem","JSON","stringify","catch","error","console","log","state","render","map","value","index","videoID","title","channelTitle","thumbnails","upvote","downvote","voteValue","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AAGA,eAAe,MAAMC,eAAN,SAA8BH,SAA9B,CAAuC;AAClDI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAOlBC,kBAPkB,GAOG,MAAM;AACvBL,MAAAA,KAAK,CAACM,GAAN,CAAU,qEAAV,EACMC,IADN,CACWC,QAAQ,IAAI;AACd,aAAKC,QAAL,CAAc;AACVC,UAAAA,eAAe,EAAEF,QAAQ,CAACG;AADhB,SAAd;AAGAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCC,IAAI,CAACC,SAAL,CAAeP,QAAQ,CAACG,IAAxB,CAAxC,EAJc,CAKf;AACF,OAPN,EAQMK,KARN,CAQYC,KAAK,IAAI;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAAmB,OARzC;AASH,KAjBiB;;AAEd,SAAKG,KAAL,GAAa;AACTV,MAAAA,eAAe,EAAE;AADR,KAAb;AAGH;;AAcDW,EAAAA,MAAM,GAAE;AAAA,UACGX,eADH,GACsB,KAAKU,KAD3B,CACGV,eADH;AAEJ,WACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQA,eAAe,CAACY,GAAhB,CAAoB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAClC,aAAO,oBAAC,oBAAD;AAAsB,QAAA,EAAE,EAAID,KAAK,CAACE,OAAlC;AAA2C,QAAA,UAAU,EAAIF,KAAK,CAACG,KAA/D;AAAsE,QAAA,MAAM,EAAIH,KAAK,CAACI,YAAtF;AACP,QAAA,SAAS,EAAIJ,KAAK,CAACK,UADZ;AACwB,QAAA,MAAM,EAAIL,KAAK,CAACM,MADxC;AACgD,QAAA,QAAQ,EAAIN,KAAK,CAACO,QADlE;AAC4E,QAAA,GAAG,EAAIN,KADnF;AAC0F,QAAA,SAAS,EAAID,KAAK,CAACQ,SAD7G;AAEP,QAAA,QAAQ,EAAGR,KAAK,CAACS,GAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAGH,KAJD,CAFR,CADJ;AAYH;;AAlCiD","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport InfoSidebarSongAdded from './InfoSidebarSongAdded';\n\n\nexport default class SidebarPlaylist extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            sidebarPlaylist: []\n        }\n    }\n\n    componentWillMount = () => {\n        axios.get('https://gorgeous-grand-teton-66654.herokuapp.com/api/songs/get/list')\n             .then(response => {\n                 this.setState({\n                     sidebarPlaylist: response.data\n                 })\n                 localStorage.setItem('sidebarPlaylist', JSON.stringify(response.data));\n                //  console.log(this.state.sidebarPlaylist);\n             })\n             .catch(error => {console.log(error)})\n    }\n\n    render(){\n        const {sidebarPlaylist} = this.state;\n        return(\n            <div className=\"sidebar-playlist\">\n                {\n                    sidebarPlaylist.map((value, index) => {\n                        return <InfoSidebarSongAdded id = {value.videoID} song_title = {value.title} singer = {value.channelTitle} \n                        thumbnail = {value.thumbnails} upvote = {value.upvote} downvote = {value.downvote} key = {index} voteValue = {value.voteValue}\n                        votingID ={value._id}/>\n                    })\n                }\n            </div>\n\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}